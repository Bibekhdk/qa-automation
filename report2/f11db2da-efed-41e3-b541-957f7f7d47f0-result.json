{"name": "test_login_functionality[chrome-admin1-]", "status": "failed", "statusDetails": {"message": "AssertionError: Login failed for username='admin1', password=''\nassert False", "trace": "self = <Tests.test_login.TestLogin object at 0x7e49a76b9890>, username = 'admin1', password = ''\n\n    @pytest.mark.parametrize(\"username, password\", [\n        (\"ram\", \"ram1234\"),\n        (\"dibash\", \"@dmin2929A\"),\n        (\"admin1\", \"dibash11\"),\n        (\"admin1\", \"\"),\n        (\"\", \"@dmin2929A\"),\n        (\"\", \"\"),\n        (\"admin1\", \"@dmin2929A\")\n    ])\n    def test_login_functionality(self, username, password):\n        login_page = LoginPage(self.driver)\n    \n        with allure.step(\"Open login page and attempt login\"):\n            login_page.load()\n            login_page.login(username, password)\n    \n        with allure.step(\"Validate login result\"):\n            toast = login_page.get_toast_message()\n            errors = login_page.get_inline_errors()\n    \n            if login_page.is_login_successful():\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"Login Success\", attachment_type=allure.attachment_type.PNG)\n                assert True\n            else:\n                if toast:\n                    allure.attach(self.driver.get_screenshot_as_png(), name=\"Toast Message\", attachment_type=allure.attachment_type.PNG)\n                    allure.attach(toast, name=\"Toast Text\", attachment_type=allure.attachment_type.TEXT)\n                if errors:\n                    allure.attach(str(errors), name=\"Inline Errors\", attachment_type=allure.attachment_type.TEXT)\n>               assert False, f\"Login failed for username='{username}', password='{password}'\"\nE               AssertionError: Login failed for username='admin1', password=''\nE               assert False\n\nTests/test_login.py:39: AssertionError"}, "steps": [{"name": "Open login page and attempt login", "status": "passed", "steps": [{"name": "Load login page", "status": "passed", "start": 1747200263885, "stop": 1747200264069}, {"name": "Login with username: 'admin1', password: ''", "status": "passed", "parameters": [{"name": "username", "value": "'admin1'"}, {"name": "password", "value": "''"}], "start": 1747200264069, "stop": 1747200264536}], "start": 1747200263884, "stop": 1747200264537}, {"name": "Validate login result", "status": "failed", "statusDetails": {"message": "AssertionError: Login failed for username='admin1', password=''\nassert False\n", "trace": "  File \"/home/bibek-hadkhale/Desktop/IPN-AUTOMATION/Tests/test_login.py\", line 39, in test_login_functionality\n    assert False, f\"Login failed for username='{username}', password='{password}'\"\n"}, "steps": [{"name": "Get toast message if exists", "status": "passed", "start": 1747200264537, "stop": 1747200274569}, {"name": "Check for inline error messages", "status": "passed", "start": 1747200274569, "stop": 1747200284657}, {"name": "Check if login is successful", "status": "passed", "start": 1747200284657, "stop": 1747200284667}], "attachments": [{"name": "Inline Errors", "source": "34d37923-cee2-4257-9783-082cc979a1d8-attachment.txt", "type": "text/plain"}], "start": 1747200264537, "stop": 1747200284667}], "parameters": [{"name": "init_driver", "value": "'chrome'"}, {"name": "username", "value": "'admin1'"}, {"name": "password", "value": "''"}], "start": 1747200263884, "stop": 1747200284668, "uuid": "3b8fd27f-d681-4bc5-a403-77e269f7435a", "historyId": "154b64bed0776ca7feb60b7d6a50b2bb", "testCaseId": "2a69c06dd07ab6f6747b8fe60239fabb", "fullName": "Tests.test_login.TestLogin#test_login_functionality", "labels": [{"name": "epic", "value": "Login Functionality"}, {"name": "feature", "value": "Login Page Tests"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "bibek-hadkhale-Nitro-AN515-44"}, {"name": "thread", "value": "147074-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_login"}]}