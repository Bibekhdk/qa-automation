{"name": "Verify merchant email can be updated successfully", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x63d31433975a <unknown>\n#1 0x63d313ddc0a0 <unknown>\n#2 0x63d313e2d9b0 <unknown>\n#3 0x63d313e2dba1 <unknown>\n#4 0x63d313e7bea4 <unknown>\n#5 0x63d313e533cd <unknown>\n#6 0x63d313e792a0 <unknown>\n#7 0x63d313e53173 <unknown>\n#8 0x63d313e1fd4b <unknown>\n#9 0x63d313e209b1 <unknown>\n#10 0x63d3142fe90b <unknown>\n#11 0x63d31430280a <unknown>\n#12 0x63d3142e6662 <unknown>\n#13 0x63d314303394 <unknown>\n#14 0x63d3142cb49f <unknown>\n#15 0x63d314327538 <unknown>\n#16 0x63d314327716 <unknown>\n#17 0x63d3143385c6 <unknown>\n#18 0x7a4c3fc9caa4 <unknown>\n#19 0x7a4c3fd29c3c <unknown>", "trace": "self = <test_edit_merchant.TestEditMerchant object at 0x7a492deb8350>\n\n    @allure.story(\"Edit Merchant\")\n    @allure.title(\"Verify merchant email can be updated successfully\")\n    def test_edit_merchant_email(self):\n        driver = self.driver\n    \n        # Step 1: Login\n        driver.get(TestData.BASE_URL)\n        login = LoginPage(driver)\n        login.login(TestData.USERNAME, TestData.PASSWORD)\n    \n        # Step 2: Navigate to Merchant Page\n        self.wait.until(EC.element_to_be_clickable((By.XPATH, \"//span[contains(text(), 'Merchant')]\"))).click()\n        time.sleep(2)  # Slight wait to ensure content loads\n    \n        # Step 3: Edit Flow\n        edit_page = EditMerchantPage(driver)\n    \n        edit_page.click_more_options()\n        edit_page.click_edit_option()\n    \n        new_email = edit_page.generate_random_email()\n>       edit_page.update_email(new_email)\n\nTests/merchant/test_edit_merchant.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/merchant/edit_merchant_page.py:31: in update_email\n    email_field = self.wait.until(EC.presence_of_element_located(self.email_input))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9b5b3e1dc163d4a48d625b7eb0a85678\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7a492d238680>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x63d31433975a <unknown>\nE       #1 0x63d313ddc0a0 <unknown>\nE       #2 0x63d313e2d9b0 <unknown>\nE       #3 0x63d313e2dba1 <unknown>\nE       #4 0x63d313e7bea4 <unknown>\nE       #5 0x63d313e533cd <unknown>\nE       #6 0x63d313e792a0 <unknown>\nE       #7 0x63d313e53173 <unknown>\nE       #8 0x63d313e1fd4b <unknown>\nE       #9 0x63d313e209b1 <unknown>\nE       #10 0x63d3142fe90b <unknown>\nE       #11 0x63d31430280a <unknown>\nE       #12 0x63d3142e6662 <unknown>\nE       #13 0x63d314303394 <unknown>\nE       #14 0x63d3142cb49f <unknown>\nE       #15 0x63d314327538 <unknown>\nE       #16 0x63d314327716 <unknown>\nE       #17 0x63d3143385c6 <unknown>\nE       #18 0x7a4c3fc9caa4 <unknown>\nE       #19 0x7a4c3fd29c3c <unknown>\n\n../seleniumtest/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "steps": [{"name": "Login with username: 'admin1', password: '@dmin2929A'", "status": "passed", "parameters": [{"name": "username", "value": "'admin1'"}, {"name": "password", "value": "'@dmin2929A'"}], "start": 1747825712566, "stop": 1747825713059}, {"name": "Click on 'More Options' button", "status": "passed", "start": 1747825716599, "stop": 1747825716803}, {"name": "Click on 'Edit' option", "status": "passed", "start": 1747825716803, "stop": 1747825717026}, {"name": "Generate random email for testing", "status": "passed", "start": 1747825717026, "stop": 1747825717026}, {"name": "Clear and enter new email: None", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x63d31433975a <unknown>\n#1 0x63d313ddc0a0 <unknown>\n#2 0x63d313e2d9b0 <unknown>\n#3 0x63d313e2dba1 <unknown>\n#4 0x63d313e7bea4 <unknown>\n#5 0x63d313e533cd <unknown>\n#6 0x63d313e792a0 <unknown>\n#7 0x63d313e53173 <unknown>\n#8 0x63d313e1fd4b <unknown>\n#9 0x63d313e209b1 <unknown>\n#10 0x63d3142fe90b <unknown>\n#11 0x63d31430280a <unknown>\n#12 0x63d3142e6662 <unknown>\n#13 0x63d314303394 <unknown>\n#14 0x63d3142cb49f <unknown>\n#15 0x63d314327538 <unknown>\n#16 0x63d314327716 <unknown>\n#17 0x63d3143385c6 <unknown>\n#18 0x7a4c3fc9caa4 <unknown>\n#19 0x7a4c3fd29c3c <unknown>\n\n", "trace": "  File \"/home/bibek-hadkhale/Desktop/seleniumtest/venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/bibek-hadkhale/Desktop/IPN-AUTOMATION/pages/merchant/edit_merchant_page.py\", line 31, in update_email\n    email_field = self.wait.until(EC.presence_of_element_located(self.email_input))\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/bibek-hadkhale/Desktop/seleniumtest/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "new_email", "value": "None"}], "start": 1747825717027, "stop": 1747825727086}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1747825711271, "stop": 1747825727087, "uuid": "4979209f-20cb-4de9-8a6b-664e0e2397a5", "historyId": "6a77d28e182c732ac55c012dfbf7454e", "testCaseId": "80b42ae8851199f3f49bd5de9898e940", "fullName": "Tests.merchant.test_edit_merchant.TestEditMerchant#test_edit_merchant_email", "labels": [{"name": "story", "value": "Edit Merchant"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests.merchant"}, {"name": "suite", "value": "test_edit_merchant"}, {"name": "subSuite", "value": "TestEditMerchant"}, {"name": "host", "value": "bibek-hadkhale-Nitro-AN515-44"}, {"name": "thread", "value": "169248-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.merchant.test_edit_merchant"}]}