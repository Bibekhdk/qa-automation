{"name": "Test to edit a merchant's email and verify success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5e4aa162875a <unknown>\n#1 0x5e4aa10cb0a0 <unknown>\n#2 0x5e4aa111c9b0 <unknown>\n#3 0x5e4aa111cba1 <unknown>\n#4 0x5e4aa116aea4 <unknown>\n#5 0x5e4aa11423cd <unknown>\n#6 0x5e4aa11682a0 <unknown>\n#7 0x5e4aa1142173 <unknown>\n#8 0x5e4aa110ed4b <unknown>\n#9 0x5e4aa110f9b1 <unknown>\n#10 0x5e4aa15ed90b <unknown>\n#11 0x5e4aa15f180a <unknown>\n#12 0x5e4aa15d5662 <unknown>\n#13 0x5e4aa15f2394 <unknown>\n#14 0x5e4aa15ba49f <unknown>\n#15 0x5e4aa1616538 <unknown>\n#16 0x5e4aa1616716 <unknown>\n#17 0x5e4aa16275c6 <unknown>\n#18 0x7b0a41c9caa4 <unknown>\n#19 0x7b0a41d29c3c <unknown>", "trace": "self = <test_edit_merchant.TestEditMerchant object at 0x727b8f0bae90>\n\n    @allure.title(\"Test to edit a merchant's email and verify success\")\n    def test_edit_merchant_email(self):\n        driver = self.driver\n    \n        # Step 1: Login\n        driver.get(TestData.BASE_URL)\n        login_page = LoginPage(driver)\n        login_page.login(TestData.USERNAME, TestData.PASSWORD)\n    \n        # Step 2: Go to merchant page\n        self.wait.until(EC.element_to_be_clickable(\n            (By.XPATH, \"//span[contains(text(), 'Merchant')]\"))).click()\n    \n        time.sleep(3)  # Allow page to settle\n    \n        # Step 3: Edit Flow\n        edit_page = EditMerchantPage(driver)\n>       edit_page.click_more_options()\n\nTests/merchant/test_edit_merchant.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/merchant/edit_merchant_page.py:16: in click_more_options\n    more_button = self.wait.until(EC.element_to_be_clickable(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7987b0c5006c0cce2510470a545063bd\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x727b8f0d00e0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5e4aa162875a <unknown>\nE       #1 0x5e4aa10cb0a0 <unknown>\nE       #2 0x5e4aa111c9b0 <unknown>\nE       #3 0x5e4aa111cba1 <unknown>\nE       #4 0x5e4aa116aea4 <unknown>\nE       #5 0x5e4aa11423cd <unknown>\nE       #6 0x5e4aa11682a0 <unknown>\nE       #7 0x5e4aa1142173 <unknown>\nE       #8 0x5e4aa110ed4b <unknown>\nE       #9 0x5e4aa110f9b1 <unknown>\nE       #10 0x5e4aa15ed90b <unknown>\nE       #11 0x5e4aa15f180a <unknown>\nE       #12 0x5e4aa15d5662 <unknown>\nE       #13 0x5e4aa15f2394 <unknown>\nE       #14 0x5e4aa15ba49f <unknown>\nE       #15 0x5e4aa1616538 <unknown>\nE       #16 0x5e4aa1616716 <unknown>\nE       #17 0x5e4aa16275c6 <unknown>\nE       #18 0x7b0a41c9caa4 <unknown>\nE       #19 0x7b0a41d29c3c <unknown>\n\n../seleniumtest/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "steps": [{"name": "Login with username: 'admin1', password: '@dmin2929A'", "status": "passed", "parameters": [{"name": "username", "value": "'admin1'"}, {"name": "password", "value": "'@dmin2929A'"}], "start": 1747825902408, "stop": 1747825902993}, {"name": "Clicking 'More Options' for merchant", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5e4aa162875a <unknown>\n#1 0x5e4aa10cb0a0 <unknown>\n#2 0x5e4aa111c9b0 <unknown>\n#3 0x5e4aa111cba1 <unknown>\n#4 0x5e4aa116aea4 <unknown>\n#5 0x5e4aa11423cd <unknown>\n#6 0x5e4aa11682a0 <unknown>\n#7 0x5e4aa1142173 <unknown>\n#8 0x5e4aa110ed4b <unknown>\n#9 0x5e4aa110f9b1 <unknown>\n#10 0x5e4aa15ed90b <unknown>\n#11 0x5e4aa15f180a <unknown>\n#12 0x5e4aa15d5662 <unknown>\n#13 0x5e4aa15f2394 <unknown>\n#14 0x5e4aa15ba49f <unknown>\n#15 0x5e4aa1616538 <unknown>\n#16 0x5e4aa1616716 <unknown>\n#17 0x5e4aa16275c6 <unknown>\n#18 0x7b0a41c9caa4 <unknown>\n#19 0x7b0a41d29c3c <unknown>\n\n", "trace": "  File \"/home/bibek-hadkhale/Desktop/seleniumtest/venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/bibek-hadkhale/Desktop/IPN-AUTOMATION/pages/merchant/edit_merchant_page.py\", line 16, in click_more_options\n    more_button = self.wait.until(EC.element_to_be_clickable(\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/bibek-hadkhale/Desktop/seleniumtest/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1747825907586, "stop": 1747825917604}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1747825901109, "stop": 1747825917605, "uuid": "cf57ba72-f6e8-4b4f-bd82-112e7b470c0a", "historyId": "6a77d28e182c732ac55c012dfbf7454e", "testCaseId": "80b42ae8851199f3f49bd5de9898e940", "fullName": "Tests.merchant.test_edit_merchant.TestEditMerchant#test_edit_merchant_email", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests.merchant"}, {"name": "suite", "value": "test_edit_merchant"}, {"name": "subSuite", "value": "TestEditMerchant"}, {"name": "host", "value": "bibek-hadkhale-Nitro-AN515-44"}, {"name": "thread", "value": "170171-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.merchant.test_edit_merchant"}]}