{"name": "Verify merchant email can be updated successfully", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5f10cdff975a <unknown>\n#1 0x5f10cda9c0a0 <unknown>\n#2 0x5f10cdaed9b0 <unknown>\n#3 0x5f10cdaedba1 <unknown>\n#4 0x5f10cdb3bea4 <unknown>\n#5 0x5f10cdb133cd <unknown>\n#6 0x5f10cdb392a0 <unknown>\n#7 0x5f10cdb13173 <unknown>\n#8 0x5f10cdadfd4b <unknown>\n#9 0x5f10cdae09b1 <unknown>\n#10 0x5f10cdfbe90b <unknown>\n#11 0x5f10cdfc280a <unknown>\n#12 0x5f10cdfa6662 <unknown>\n#13 0x5f10cdfc3394 <unknown>\n#14 0x5f10cdf8b49f <unknown>\n#15 0x5f10cdfe7538 <unknown>\n#16 0x5f10cdfe7716 <unknown>\n#17 0x5f10cdff85c6 <unknown>\n#18 0x7b860fa9caa4 <unknown>\n#19 0x7b860fb29c3c <unknown>", "trace": "self = <test_edit_merchant.TestEditMerchant object at 0x74410bc86510>\n\n    @allure.story(\"Edit Merchant\")\n    @allure.title(\"Verify merchant email can be updated successfully\")\n    def test_edit_merchant_email(self):\n        driver = self.driver\n    \n        # Step 1: Login\n        driver.get(TestData.BASE_URL)\n        login = LoginPage(driver)\n        login.login(TestData.USERNAME, TestData.PASSWORD)\n    \n        # Step 2: Navigate to Merchant Page\n        self.wait.until(EC.element_to_be_clickable((By.XPATH, \"//span[contains(text(), 'Merchant')]\"))).click()\n        time.sleep(2)  # Slight wait to ensure content loads\n    \n        # Step 3: Edit Flow\n        edit_page = EditMerchantPage(driver)\n    \n        edit_page.click_more_options()\n>       edit_page.click_edit_option()\n\nTests/merchant/test_edit_merchant.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/merchant/edit_merchant_page.py:27: in click_edit_option\n    self.wait.until(EC.element_to_be_clickable(self.edit_option)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"56018c09c535117e526073afa7618f8f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x74410c4d8680>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5f10cdff975a <unknown>\nE       #1 0x5f10cda9c0a0 <unknown>\nE       #2 0x5f10cdaed9b0 <unknown>\nE       #3 0x5f10cdaedba1 <unknown>\nE       #4 0x5f10cdb3bea4 <unknown>\nE       #5 0x5f10cdb133cd <unknown>\nE       #6 0x5f10cdb392a0 <unknown>\nE       #7 0x5f10cdb13173 <unknown>\nE       #8 0x5f10cdadfd4b <unknown>\nE       #9 0x5f10cdae09b1 <unknown>\nE       #10 0x5f10cdfbe90b <unknown>\nE       #11 0x5f10cdfc280a <unknown>\nE       #12 0x5f10cdfa6662 <unknown>\nE       #13 0x5f10cdfc3394 <unknown>\nE       #14 0x5f10cdf8b49f <unknown>\nE       #15 0x5f10cdfe7538 <unknown>\nE       #16 0x5f10cdfe7716 <unknown>\nE       #17 0x5f10cdff85c6 <unknown>\nE       #18 0x7b860fa9caa4 <unknown>\nE       #19 0x7b860fb29c3c <unknown>\n\n../seleniumtest/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "steps": [{"name": "Login with username: 'admin1', password: '@dmin2929A'", "status": "passed", "parameters": [{"name": "username", "value": "'admin1'"}, {"name": "password", "value": "'@dmin2929A'"}], "start": 1747825656784, "stop": 1747825657307}, {"name": "Click on 'More Options' button", "status": "passed", "start": 1747825660747, "stop": 1747825660947}, {"name": "Click on 'Edit' option", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5f10cdff975a <unknown>\n#1 0x5f10cda9c0a0 <unknown>\n#2 0x5f10cdaed9b0 <unknown>\n#3 0x5f10cdaedba1 <unknown>\n#4 0x5f10cdb3bea4 <unknown>\n#5 0x5f10cdb133cd <unknown>\n#6 0x5f10cdb392a0 <unknown>\n#7 0x5f10cdb13173 <unknown>\n#8 0x5f10cdadfd4b <unknown>\n#9 0x5f10cdae09b1 <unknown>\n#10 0x5f10cdfbe90b <unknown>\n#11 0x5f10cdfc280a <unknown>\n#12 0x5f10cdfa6662 <unknown>\n#13 0x5f10cdfc3394 <unknown>\n#14 0x5f10cdf8b49f <unknown>\n#15 0x5f10cdfe7538 <unknown>\n#16 0x5f10cdfe7716 <unknown>\n#17 0x5f10cdff85c6 <unknown>\n#18 0x7b860fa9caa4 <unknown>\n#19 0x7b860fb29c3c <unknown>\n\n", "trace": "  File \"/home/bibek-hadkhale/Desktop/seleniumtest/venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/bibek-hadkhale/Desktop/IPN-AUTOMATION/pages/merchant/edit_merchant_page.py\", line 27, in click_edit_option\n    self.wait.until(EC.element_to_be_clickable(self.edit_option)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/bibek-hadkhale/Desktop/seleniumtest/venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1747825660947, "stop": 1747825670978}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1747825655528, "stop": 1747825670979, "uuid": "3ee41a2b-0506-470c-a1e1-2eaa13ef897d", "historyId": "6a77d28e182c732ac55c012dfbf7454e", "testCaseId": "80b42ae8851199f3f49bd5de9898e940", "fullName": "Tests.merchant.test_edit_merchant.TestEditMerchant#test_edit_merchant_email", "labels": [{"name": "story", "value": "Edit Merchant"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests.merchant"}, {"name": "suite", "value": "test_edit_merchant"}, {"name": "subSuite", "value": "TestEditMerchant"}, {"name": "host", "value": "bibek-hadkhale-Nitro-AN515-44"}, {"name": "thread", "value": "168788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.merchant.test_edit_merchant"}]}